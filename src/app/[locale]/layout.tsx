import type { Metadata } from "next";
import { Plus_Jakarta_Sans } from "next/font/google";
import "../globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/shared/i18n/routing";
import { setRequestLocale } from "next-intl/server";
import { AppHeader } from "@/features/header";
import { Category } from "@/shared/lib/types";

const plusJakarta = Plus_Jakarta_Sans({
  variable: "--font-inter-sans",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

interface Props {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}

const categories: Category[] = [
  { label: "Spoons", slug: "/spoons" },
  { label: "Spoons", slug: "/spoons" },
  { label: "Spoons", slug: "/spoons" },
  { label: "Spoons", slug: "/spoons" },
  { label: "Spoons", slug: "/spoons" },
]

export default async function RootLayout({ children, params }: Props) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  setRequestLocale(locale);

  return (
    <html lang={locale}>
      <body className={`${plusJakarta.className} antialiased`}>
        <NextIntlClientProvider>
          <AppHeader categories={categories} />
          {children}
          </NextIntlClientProvider>
      </body>
    </html>
  );
}
